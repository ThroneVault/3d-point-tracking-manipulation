Fixes & Improvements
- For select_circle routine and subroutines, add messages with how to proceed
or escape functions, as well as improving how to "escape" them, with error
handling and print statements stating if the process was quit/interupted and
maybe the output if finished.
- Change settings for lines/circles/anything from hardcoded values to
variables fetched from the config file
- Function naming - most of my functions start with get_, better way?
- Go back and, where possible, replace numpy functions with python built-ins
where possible, unless when doing array operations(e.g. add vs np.add)
- Ever OK to define class variable outside constuctor?  For example, cal_count
variable in TrackingTarget class - always needs to be initialized in calibrate
function and is not used outside of there.  Should I define as None in
constructor then can initialize in calibrate function?
 - Use monitor sizes and position for more robust window positioning
 - Separate config into two parts -> adjustable variables for user to adjust,
 and other variables that are more set in stone once completed(print messages,
 etc)???
 - Go back and redo print messages and instructions so they are all read from
 config dictionary and make modular if possible(e.g. "<function name> aborted")
 - Ask terminate calibration input at each step(press 'q' to quit?)
 - Make return statements consistent - see PEP8
 - Should I pull calibration methods out as functions and create wrapper
 methods for them??
 - Add blur adjustment to calibration or keep at set value??
 - Change any hardcoded drawing parameters(circle color, weight, etc) to config
  file variables
 - In class methods, define variables locally(e.g. circle = self._circle, etc)
 to reduce clutter and make code look cleaner